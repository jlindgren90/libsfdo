include:
  - project: "freedesktop/ci-templates"
    ref: b61a03cabbf308e81289f7aaaf0b5a80a34ffb99
    file: "/templates/fedora.yml"

variables:
  FDO_UPSTREAM_REPO: vyivel/libsfdo

stages:
  - prep
  - style-check
  - build

.policy:
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  interruptible: true

.fedora-40:
  extends:
    - .policy
  variables:
    FDO_DISTRIBUTION_VERSION: "40"
    FDO_DISTRIBUTION_TAG: "2024-08-06.0"

fedora-40:
  extends:
    - .fdo.container-build@fedora
    - .fedora-40
  stage: prep
  variables:
    GIT_STRATEGY: none
    FDO_DISTRIBUTION_PACKAGES: "git-core gcc pkgconf-pkg-config meson lcov libasan libubsan clang-tools-extra"

clang-format:
  extends:
    - .fdo.distribution-image@fedora
    - .fedora-40
  stage: style-check
  script:
    - meson setup build/
    - ninja -C build/ clang-format-check

build:
  extends:
    - .fdo.distribution-image@fedora
    - .fedora-40
  stage: build
  script:
    # Setup
    - >
      meson setup build/
      --fatal-meson-warnings
      -Dwerror=true
      -Dbuildtype=debug
      -Doptimization=0
      -Db_sanitize=address,undefined
      -Db_coverage=true
    # Build
    - ninja -C build/ -k0 -j${FDO_CI_CONCURRENT:-4}
    # Setup coverage
    - mkdir -p build-coverage/
    # Baseline coverage data
    - >
      lcov
      --config-file .lcovrc
      --directory build/
      --capture
      --initial
      --output-file "build-coverage/baseline.lcov"
    # Run tests
    - meson test -C build --num-processes ${FDO_CI_CONCURRENT:-4}
    # Test coverage data
    - >
      lcov
      --config-file .lcovrc
      --directory build/
      --capture
      --output-file "build-coverage/test.lcov"
    # Combined coverage data
    - >
      lcov
      --add-tracefile "build-coverage/baseline.lcov"
      --add-tracefile "build-coverage/test.lcov"
      --output-file "build-coverage/out.lcov"
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - "build/meson-logs"
      - "build-coverage/"
  coverage: '/^\s+lines\.+:\s+([\d.]+\%)\s+/'
